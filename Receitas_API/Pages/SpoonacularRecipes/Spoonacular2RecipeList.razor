@page "/recipelist"

@* @using Microsoft.Extensions.Logging
@using RestSharp;
@using Newtonsoft.Json
@using Receitas_API.Data
@using Receitas_API.Models
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Spinner;
@using Syncfusion.Blazor.RichTextEditor
@using Receitas_API.Components
 *@

 @using Microsoft.Extensions.Logging
@using System.Net.Http.Json
@using Receitas_API.Data
@using Receitas_API.Models
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Spinner
@using Syncfusion.Blazor.RichTextEditor
@using Receitas_API.Components

@inject ILogger<App> logger;
@inject IJSRuntime JS

<a id="top_page"></a>
<h3>Recipes V1</h3>

<hr />
<div id="spinnerContainer"></div>
<SfSpinner @ref="@SpinnerObj"
           Label="Processando..."
           Type="SpinnerType.Bootstrap4"
           CssClass="e-outline-spin">
</SfSpinner>

@if (AlertVisibility)
{
    <AlertMessage Message="Pesquisa não devolveu resultados." MessageType="Enums.AlertMessageType.Info"></AlertMessage>
}

@if (RegionsData == null)
{
    <LoadingData spinnerMessage="@(string.IsNullOrEmpty(searchMessage)?$"Filtrando dados para região/país '{RegionName}'":searchMessage)" />
}
else
{

    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-6 col-md-12">
                <label>Choose country/region</label>
            </div>
            <div class="col-lg-6 col-md-12">
                <SfDropDownList PopupWidth="250px" PopupHeight="450px" @bind-Value="@RegionName" AllowFiltering="true"
                                CssClass="custom-class e-corner"
                                FilterBarPlaceholder="Filtrar" FilterType="Syncfusion.Blazor.DropDowns.FilterType.Contains"
                                TItem="CuisineRegion" TValue="string" Placeholder="Escolha Tag" DataSource="@RegionsData">
                    <DropDownListEvents TItem="CuisineRegion" TValue="string" ValueChange="onChangeRegion"></DropDownListEvents>
                    <DropDownListFieldSettings Text="RegionName" Value="ID"></DropDownListFieldSettings>
                </SfDropDownList>
            </div>
        </div>
    </div>
    <hr />
    }

@if (recipesTitles == null)
{
    <LoadingData spinnerMessage="@(string.IsNullOrEmpty(searchMessage)?$"Filtrando dados para região/país '{RegionName}'":searchMessage)" />
}
else
{

    foreach (var recipesTitles in recipesTitles.results)
    {
        var recipeId = recipesTitles.id; //.Where(p => p.title == RegionName).Select(o => o.id).FirstOrDefault();
        var t = Task.Run(() => GetRecipeInformation(recipeId));
        t.Wait();
        recipeInformation = t.Result; // GetRecipeInformation(recipeId).Result;
        var recipeInstructions = recipeInformation.instructions;
        var recipeSummary = recipeInformation.summary;
        var servings = recipeInformation.servings.ToString();
        var readyInMinutes = recipeInformation.readyInMinutes.ToString();
        var aggregateLikes = recipeInformation.aggregateLikes.ToString();
        var veryHealthy = recipeInformation.veryHealthy.ToString();
        var dishTypes = recipeInformation.dishTypes;
        var pricePerServing = recipeInformation.pricePerServing.ToString();

        <div class="control-section">
            <div class="row">
                <div class="col-lg-6 col-md-12 col-sm-12 content">
                    <SfCard ID="SideCard">
                        <CardImage Image="@recipesTitles.image" TitlePosition="TitlePositions.TopRight"
                                   Title="@recipesTitles.id.ToString()"></CardImage>
                        <CardContent>
                            <ChildContent>
                                <p class="h5">
                                    @recipesTitles.title
                                </p>
                            </ChildContent>
                        </CardContent>

                    </SfCard>

                    <div class="recipe-icons">
                        <SfChip>
                            <ChipItems>
                                <ChipItem class="e-outline" LeadingIconCss="fas fa-users" Text="@servings"></ChipItem>
                                <ChipItem class="e-outline" LeadingIconCss="fas fa-clock" Text="@readyInMinutes"></ChipItem>
                                <ChipItem class="e-outline" LeadingIconCss="fas fa-thumbs-up" Text="@aggregateLikes"></ChipItem>
                                <ChipItem class="e-outline" LeadingIconCss="fas fa-dollar-sign" Text="@pricePerServing"></ChipItem>
                            </ChipItems>
                        </SfChip>
                    </div>
                    <div class="recipe-icons">
                        <SfChip>
                            <ChipItems>
                                @foreach (var dishType in dishTypes)
                                {
                                    <ChipItem class="e-primary e-ouline" LeadingIconCss="fas fa-table" Text="@dishType"></ChipItem>
                                }
                            </ChipItems>
                        </SfChip>
                    </div>
                    <br />
                    <SfButton Content=" Go Top" CssClass="e-btn e-primary e-outline e-round-corner" IconCss="oi oi-arrow-circle-top" @onclick="GoTop" />
                </div>
                <div class="col-lg-6 col-md-12 col-sm-12 content">
                    <SfCard ID="DetailCard">
                        <CardHeader>
                            <div class="content">
                                <div class="detail-title">Instructions</div>
                            </div>
                        </CardHeader>
                        <CardContent>
                            <ChildContent>
                                <div class="content mt-0">
                                    @if (recipeInstructions is not null)
                                    {
                                        @recipeInstructions
                                    }
                                    else
                                    {
                                        <div class="text-center">No data available</div>
                                    }
                                </div>
                            </ChildContent>
                        </CardContent>
                        <CardContent>
                            <div class="content">
                                <div class="detail-title">Summary</div>
                                <SfRichTextEditor EnableHtmlEncode="true" Readonly="true">
                                    @recipeSummary
                                </SfRichTextEditor>
                            </div>
                        </CardContent>
                    </SfCard>
                </div>
            </div>
            <hr />
        </div>
    }
}


<style>
    body {
        font-size: medium;
        font-family: Impact, 'Lucida Handwriting', sans-serif;
    }

    .loader {
        border: 16px solid #f3f3f3; /* Light grey */
        border-top: 16px solid #3498db; /* Blue */
        border-radius: 50%;
        width: 120px;
        height: 120px;
        animation: spin 2s linear infinite;
    }

    #SideCard .e-card .e-card-content {
        height: 376px;
        margin: 16px;
        padding-top: 10px;
    }

    #DetailCard .e-card .e-card-content {
        padding-top: 0px;
    }

    /*    .e-spinner-pane .e-spinner-inner .e-spin-bootstrap4 {
                                                    stroke: green;
                                                }
                                            */
    .e-card > .e-card-image {
        background-repeat: no-repeat;
        width: 100%;
        height: 100%;
        min-height: 350px;
        min-width: 350px;
    }
    /* .row {
                                                            width: 80%;
                                                            margin: auto;
                                                        }*/

    .e-btn {
        margin-left: 4px;
    }

    /*    .e-card .e-card-content {
                                                            padding-top: 0px;
                                                            font-size:medium;
                                                            }
                                                    */


    .header-area .top-header-area .top-social-info a {
        display: inline-block;
        color: #b6b6b6;
        font-size: 13px;
        margin-right: 30px;
    }

    #PageTop {
        display: inline-block;
        background-color: #FF9800;
        width: 50px;
        height: 50px;
        text-align: center;
        border-radius: 4px;
        position: fixed;
        bottom: 30px;
        right: 30px;
        transition: background-color .3s, opacity .5s, visibility .5s;
        opacity: 0;
        visibility: hidden;
        z-index: 1000;
    }

        #PageTop::after {
            content: "\f077";
            font-family: FontAwesome;
            font-weight: normal;
            font-style: normal;
            font-size: 2em;
            line-height: 50px;
            color: #fff;
        }

        #PageTop:hover {
            cursor: pointer;
            background-color: #333;
        }

        #PageTop:active {
            background-color: #555;
        }

        #PageTop.show {
            opacity: 1;
            visibility: visible;
        }

    /* Styles for the content section */

    .content {
        width: 90%;
        margin: 10px auto;
        font-family: 'Merriweather', serif;
        font-size: 15px;
        color: #6c767a;
        line-height: 1.8;
    }

    .e-spinner-pane .e-spinner-inner .e-spin-bootstrap4 {
        stroke: green;
    }

    .content {
        width: 90%;
        margin: 10px auto;
        font-family: 'Merriweather', serif;
        font-size: 15px;
        color: #6c767a;
        line-height: 1.4;
    }

        .content .ingredient {
            color: steelblue;
            font-size: 1.2rem;
            font-weight: bold;
            margin-top: 6px;
            margin-bottom: 6px;
            border-block: 2px solid #D3D3D3;
        }

    .detail-title {
        font-family: 'Merriweather', serif;
        text-align: center;
        border-style: groove;
    }

    .recipe-icons {
        display: flex;
        justify-content: space-around;
        align-items: center;
        /* grid-template-columns: repeat(3, 1fr); */
        gap: 2px;
        /* margin: 0.5rem 5px; */
        text-align: center;
    }

        .recipe-icons i {
            font-size: 1.5rem;
            /* color:  var(--primary-500); */
        }

        .recipe-icons h5,
        .recipe-icons p {
            margin-bottom: 0;
            font-size: 0.85em;
        }

        .recipe-icons p {
            color: var(--grey-600);
        }

</style>

